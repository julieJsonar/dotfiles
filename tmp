andy       eclipse-moonrise-theme  svn-info      Videos
Desktop    Music                   Templates     vmware
Documents  Pictures                tmp           work
dotfiles   Public                  tmux.history  workspace
Downloads  script                  tools
➜  ~  cd work
➜  work  ls
5.2             fos52-rtmp-git2     fos-git   log
fos52-rtmp-git  fos52-rtmp-git.bak  gitrepos  pcap
➜  work  cd fos52-rtmp-git2
➜  fos52-rtmp-git2 git:(rtmp) gdb sysinit/init
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
---Type <return> to continue, or q <return> to quit---
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from sysinit/init...
done.
(gdb)
(gdb) target remote 10.1.2.124:444
Remote debugging using 10.1.2.124:444
warning: Could not load shared library symbols for 17 libraries, e.g. ../lib/libssl.so.1.0.0.
Use the "info sharedlibrary" command to see the complete listing.
Do you need "set solib-search-path" or "set sysroot"?
Reading symbols from /fortidev4/lib/ld-linux.so.2...done.
Loaded symbols for /fortidev4/lib/ld-linux.so.2
Reading symbols from /fortidev4/lib/libfreetype.so.6...done.
Loaded symbols for /fortidev4/lib/libfreetype.so.6
0x40001012 in _dl_sysinfo_int80 ()
   from /fortidev4/lib/ld-linux.so.2
(gdb) c
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x09290904 in wad_rtmpt_srv_intercept_proc_region (
    hstrm=0x40d91bac, br=0x40f4ad2c) at wad_http_cache.c:10633
10633                   return port->in_ops->read_region(port, br);
(gdb) bt
#0  0x09290904 in wad_rtmpt_srv_intercept_proc_region (
    hstrm=0x40d91bac, br=0x40f4ad2c) at wad_http_cache.c:10633
#1  0x092ef1e3 in wad_http_stream_read_normal_body (
    hstrm=0x40d91bac) at wad_http_parser.c:3595
#2  0x0929f985 in wad_http_server_read_sync (port=0x40b66650)
    at wad_http_cache.c:13476
#3  0x0920340a in wad_port_tp_glue_in_read_sync (port=0x40b66650)
    at wad_app_eng.c:362
#4  0x09377555 in wad_tcp_port_on_read (tcp_port=0x40b66650,
    last_read=0) at wad_tcp_port.c:1443
#5  0x09377824 in wad_tcp_port_on_event (e=0x419a50e0,
    ev=WAD_SCHED_EVENT_READABLE) at wad_tcp_port.c:1513
#6  0x0934ec4c in wad_sched_process_events (n=1)
    at scheduler/epoll/wad_sched.c:58
---Type <return> to continue, or q <return> to quit---
#7  0x0934ee66 in wad_sched_start ()
    at scheduler/epoll/wad_sched.c:135
#8  0x0938bdb2 in wad_ui_main (argc=3, argv=0xbfffff54)
    at ui/fg/wad_ui.c:521
#9  0x08066354 in fortiexec_call_main (argc=3, argv=0xbfffff54)
    at fortiexec.c:666
#10 0x08065c52 in main (argc=3, argv=0xbfffff54) at init.c:2428
(gdb) l
10628                           rtmpt_ses->response_have_skip_1st_byte = 1;
10629                           br->start ++;
10630                   }
10631
10632                   /* forward the data to RTMP layer*/
10633                   return port->in_ops->read_region(port, br);
10634           }
10635           wad_buff_region_put(br);
10636           return 1;
10637   }
(gdb) p port
$1 = (struct wad_port *) 0x40e400c8
(gdb) where
#0  0x09290904 in wad_rtmpt_srv_intercept_proc_region (
    hstrm=0x40d91bac, br=0x40f4ad2c) at wad_http_cache.c:10633
#1  0x092ef1e3 in wad_http_stream_read_normal_body (
    hstrm=0x40d91bac) at wad_http_parser.c:3595
#2  0x0929f985 in wad_http_server_read_sync (port=0x40b66650)
    at wad_http_cache.c:13476
#3  0x0920340a in wad_port_tp_glue_in_read_sync (port=0x40b66650)
    at wad_app_eng.c:362
#4  0x09377555 in wad_tcp_port_on_read (tcp_port=0x40b66650,
    last_read=0) at wad_tcp_port.c:1443
#5  0x09377824 in wad_tcp_port_on_event (e=0x419a50e0,
    ev=WAD_SCHED_EVENT_READABLE) at wad_tcp_port.c:1513
#6  0x0934ec4c in wad_sched_process_events (n=1)
    at scheduler/epoll/wad_sched.c:58
---Type <return> to continue, or q <return> to quit---
#7  0x0934ee66 in wad_sched_start ()
    at scheduler/epoll/wad_sched.c:135
#8  0x0938bdb2 in wad_ui_main (argc=3, argv=0xbfffff54)
    at ui/fg/wad_ui.c:521
#9  0x08066354 in fortiexec_call_main (argc=3, argv=0xbfffff54)
    at fortiexec.c:666
#10 0x08065c52 in main (argc=3, argv=0xbfffff54) at init.c:2428
(gdb) p *br
$2 = {list = {next = 0x0, prev = 0x0}, buff = 0x4197bce0,
  start = 1008, end = 4076, ref_count = 1}
(gdb) p *hstrm
$3 = {hs = 0x40b768e4, peer = 0x40b768e8, port = 0x40b66650,
  strm_data = {input = {regions = {next = 0x40f4a818,
        prev = 0x40f4af68}, rbr = 0x40f4a818, wbr = 0x40f4af68,
      rp = 0, len_left = 4172}, msg_state = 6 '\006',
    getln_state = 9 '\t', chunked_state = 0 '\000',
    mp_state = 0 '\000', line = 0x0, boundary = 0x0,
    boundary2 = 0x0, bn_reader = {cursor1 = 0x0, c1_off = 0,
      cursor2 = 0x0, boundary_cmp_ptr = 0},
    http_detect_state = 0 '\000', is_client = 0 '\000',
    is_range = 0 '\000', has_chunk_len = 0 '\000',
    multipart_1st_bn = 0 '\000', nest_mp_start = 0 '\000',
    req_seen = 0 '\000', av_scan_body = 0 '\000',
    has_content_len = 1 '\001', done_close = 0 '\000',
    content_len_status = 2 '\002', body_chunk = 0 '\000',
---Type <return> to continue, or q <return> to quit---
    method = 0 '\000', version = 3 '\003', code = 200,
    body_len = 248481, range_start = 0, range_len = 0,
    body_chunk_len = 0, header_len = 130, stats = 0xbffffef8},
  execute = 0x92ef0b3 <wad_http_stream_read_normal_body>,
  ops = 0xa9c36a0 <rtmpt_intercept_srv_ops>, out_ops = 0x0,
  n_reqs = 1}
(gdb)
(gdb) p *port
$4 = {data = 0x66203763, peer = 0x63362038, factory = 0x20613020,
  ses_ctx = 0x32206666, {n_out_block = 57 '9',
    n_in_block = 32 ' ', closed = 1 '\001',
    grace_close = 0 '\000', in_shutdown = 0 '\000',
    in_close = 0 '\000', out_shutdown = 1 '\001',
    out_close = 1 '\001', av_redir = 0 '\000',
    start_fired = 0 '\000', is_redir_port = 0 '\000'},
  type = 540501536, {tcp_port = 0x33203034,
    tunnel_port = 0x33203034, compressor = 0x33203034,
    ssl_app = 0x33203034, ssl_sock = 0x33203034,
    ssl_proxy = 0x33203034, stream_port = 0x33203034,
    ips_port = 0x33203034, rtmp_port = 0x33203034},
  out_ops = 0x39392065, in_ops = 0x20333220}
(gdb) p *port->in_ops
Cannot access memory at address 0x20333220
(gdb) p port->in_ops
$5 = (struct wad_port_ops *) 0x20333220
(gdb) p *(port->in_ops)
Cannot access memory at address 0x20333220
(gdb) p port->in_ops->read_region
Cannot access memory at address 0x20333224
(gdb) p rtmpt_ses
$6 = (struct wad_rtmpt_session *) 0x40e4002c
(gdb) p *rtmpt_ses
$7 = {ref_cnt = 924869177, state = 1664360546, ses_key = {
    vf_id = 543580448,
    client_id = "74 87 9e e1 45 ef 23 06 2a 9c f1 76 af 8f f0 87 ff 7c 68 10 67 0"}, ses_key_len = 1681268790, app_ses = 0x20313620,
  hcs = 0x61203161, rs = 0x66612063, client = {port = {
      data = 0x20396120, peer = 0x66203136, factory = 0x62372034,
      ses_ctx = 0x20353120, {n_out_block = 55 '7',
        n_in_block = 99 'c', closed = 0 '\000',
        grace_close = 0 '\000', in_shutdown = 0 '\000',
        in_close = 0 '\000', out_shutdown = 0 '\000',
        out_close = 1 '\001', av_redir = 0 '\000',
        start_fired = 0 '\000', is_redir_port = 0 '\000'},
      type = 876093494, {tcp_port = 0x20303520,
        tunnel_port = 0x20303520, compressor = 0x20303520,
---Type <return> to continue, or q <return> to quit---
        ssl_app = 0x20303520, ssl_sock = 0x20303520,
        ssl_proxy = 0x20303520, stream_port = 0x20303520,
        ips_port = 0x20303520, rtmp_port = 0x20303520},
      out_ops = 0x66203434, in_ops = 0x63322034},
    session = 0x20363320, out_len = 857761074, output = {
      regions = {next = 0x38352037, prev = 0x20346220},
      n_regions = 840971315}, rtmp = 0x37612031,
    write_block = 0 '\000', write_close = 0 '\000',
    app_shutdown = 0 '\000', app_close = 0 '\000',
    opened = 0 '\000'}, server = {port = {data = 0x66203763,
      peer = 0x63362038, factory = 0x20613020,
      ses_ctx = 0x32206666, {n_out_block = 57 '9',
        n_in_block = 32 ' ', closed = 1 '\001',
        grace_close = 0 '\000', in_shutdown = 0 '\000',
---Type <return> to continue, or q <return> to quit---
        in_close = 0 '\000', out_shutdown = 1 '\001',
        out_close = 1 '\001', av_redir = 0 '\000',
        start_fired = 0 '\000', is_redir_port = 0 '\000'},
      type = 540501536, {tcp_port = 0x33203034,
        tunnel_port = 0x33203034, compressor = 0x33203034,
        ssl_app = 0x33203034, ssl_sock = 0x33203034,
        ssl_proxy = 0x33203034, stream_port = 0x33203034,
        ips_port = 0x33203034, rtmp_port = 0x33203034},
      out_ops = 0x39392065, in_ops = 0x20333220},
    session = 0x61206632, out_len = 892805176, output = {
      regions = {next = 0x20373720, prev = 0x64206462},
      n_regions = 892608569}, rtmp = 0x20313220,
    write_block = 0 '\000', write_close = 0 '\000',
    app_shutdown = 1 '\001', app_close = 0 '\000',
---Type <return> to continue, or q <return> to quit---
    opened = 0 '\000'}, node = {map = 0x63362031, list = {
      next = 0x20333820, prev = 0x64203334}, hash = 825303141,
    key = 0x20343220 <error: Cannot access memory at address 0x20343220>, len = 857748537, data = 0x35362032}, tm_link = {
    next = 0x20663920, prev = 0x31206238},
  client_id_len = 875634743, seq = 540095520, reqs = {
    next = 0x32203164, prev = 0x31622066},
  request_body_empty = 0x20663220,
  response_firstbyte = 0x33206432, timeout_cnt = 100 'd',
  no_data_resp_cnt = 32 ' ', processing = 102 'f',
  rtmpt_dirty = 1 '\001', id_learned = 0 '\000',
  graceful_close = 0 '\000', keep_alive = 1 '\001',
  close_notified = 1 '\001',
  response_have_skip_1st_byte = 1 '\001'}
(gdb) p hcs
$8 = (struct wad_http_session *) 0x40b768e4
(gdb) p *hcs
$9 = {as = 0x40cfcf44, client = {stream = {hs = 0x40b768e4,
      peer = 0x40d91bac, port = 0x40b65354, strm_data = {input = {
          regions = {next = 0x40b768f4, prev = 0x40b768f4},
          rbr = 0x0, wbr = 0x0, rp = 0, len_left = 0},
        msg_state = 1 '\001', getln_state = 0 '\000',
        chunked_state = 0 '\000', mp_state = 0 '\000',
        line = 0x0, boundary = 0x0, boundary2 = 0x0, bn_reader = {
          cursor1 = 0x0, c1_off = 0, cursor2 = 0x0,
          boundary_cmp_ptr = 0}, http_detect_state = 0 '\000',
        is_client = 1 '\001', is_range = 0 '\000',
        has_chunk_len = 0 '\000', multipart_1st_bn = 0 '\000',
        nest_mp_start = 0 '\000', req_seen = 1 '\001',
        av_scan_body = 0 '\000', has_content_len = 0 '\000',
        done_close = 0 '\000', content_len_status = 0 '\000',
---Type <return> to continue, or q <return> to quit---
        body_chunk = 0 '\000', method = 0 '\000',
        version = 0 '\000', code = 0,
        body_len = 18446744073709551615, range_start = 0,
        range_len = 0, body_chunk_len = 0, header_len = 0,
        stats = 0x40b89254},
      execute = 0x92dd2c5 <wad_http_client_read_request_line>,
      ops = 0xa9c33e0 <wad_http_client_ops>,
      out_ops = 0xa9c34a0 <wad_http_clt_fwd_resp_ops>,
      n_reqs = 1}, task_link = {next = 0x0, prev = 0x0},
    req = 0x0, resp = 0x0, cache_obj = 0x0, hl = 0x0, srv_addr = {
      sa = {sa_family = 0, sa_data = '\000' <repeats 13 times>},
      sa4 = {sin_family = 0, sin_port = 0, sin_addr = {
          s_addr = 0},
        sin_zero = "\000\000\000\000\000\000\000"}, sa6 = {
---Type <return> to continue, or q <return> to quit---
        sin6_family = 0, sin6_port = 0, sin6_flowinfo = 0,
        sin6_addr = {__in6_u = {
            __u6_addr8 = '\000' <repeats 15 times>,
            __u6_addr16 = {0, 0, 0, 0, 0, 0, 0, 0},
            __u6_addr32 = {0, 0, 0, 0}}}, sin6_scope_id = 0}},
    srv_name = 0x0, route_version = 0, out_ifidx = 0,
    reply_state = 0 '\000', read_block = 0 '\000',
    read_block_miss = 0 '\000', pause = 0 '\000',
    conn_pause = 0 '\000', hdr_pause = 0 '\000',
    body_pause = 0 '\000', nreq_pause = 0 '\000',
    continue_req = 0 '\000', resume_read = 0 '\000',
    continue_send = 0 '\000',
    continue_scan_req_result = 0 '\000',
    continue_scan_resp_result = 0 '\000',
---Type <return> to continue, or q <return> to quit---
    continue_scan_req_release = 0 '\000',
    continue_scan_resp_release = 0 '\000',
    read_more_cache = 0 '\000', cache_lock = 0 '\000',
    port_paused = 0 '\000', conn_paused = 0 '\000',
    resume_tunnel_setup = 0 '\000', disconn_server = 0 '\000',
    disconn_all = 0 '\000'}, link = {next = 0xaec31f4 <l_hc_ses>,
    prev = 0x40b76d3c}, comfort_req = {hcs = 0x40b768e4, link = {
      next = 0x0, prev = 0x0}}, comfort_resp = {hcs = 0x40b768e4,
    link = {next = 0x0, prev = 0x0}}, processing = 1 '\001',
  svr_proc_cnt = 1 '\001', has_srv_ip = 0 '\000',
  no_pause = 0 '\000', client_closed = 0 '\000',
  has_fwd_srv_conn = 0 '\000', srv_closing = 0 '\000',
  f_srv_closed = 0 '\000', not_bad_gw = 1 '\001',
  no_reply = 0 '\000', deep_scan = 0 '\000',
---Type <return> to continue, or q <return> to quit---q
host_ip_invalid = 0 '\Quit
(gdb) p hcs->rtmpt_info
$10 = {is_checked = 1 '\001', is_rtmpt = 1 '\001',
  r_state = 3 '\003', rs = 0x40e4002c}
(gdb) p hcs->rtmpt_info.rs
$11 = (struct wad_rtmpt_session *) 0x40e4002c
(gdb) p *hcs->rtmpt_info.rs
$12 = {ref_cnt = 924869177, state = 1664360546, ses_key = {
    vf_id = 543580448,
    client_id = "74 87 9e e1 45 ef 23 06 2a 9c f1 76 af 8f f0 87 ff 7c 68 10 67 0"}, ses_key_len = 1681268790, app_ses = 0x20313620,
  hcs = 0x61203161, rs = 0x66612063, client = {port = {
      data = 0x20396120, peer = 0x66203136, factory = 0x62372034,
      ses_ctx = 0x20353120, {n_out_block = 55 '7',
        n_in_block = 99 'c', closed = 0 '\000',
        grace_close = 0 '\000', in_shutdown = 0 '\000',
        in_close = 0 '\000', out_shutdown = 0 '\000',
        out_close = 1 '\001', av_redir = 0 '\000',
        start_fired = 0 '\000', is_redir_port = 0 '\000'},
      type = 876093494, {tcp_port = 0x20303520,
        tunnel_port = 0x20303520, compressor = 0x20303520,
---Type <return> to continue, or q <return> to quit---
        ssl_app = 0x20303520, ssl_sock = 0x20303520,
        ssl_proxy = 0x20303520, stream_port = 0x20303520,
        ips_port = 0x20303520, rtmp_port = 0x20303520},
      out_ops = 0x66203434, in_ops = 0x63322034},
    session = 0x20363320, out_len = 857761074, output = {
      regions = {next = 0x38352037, prev = 0x20346220},
      n_regions = 840971315}, rtmp = 0x37612031,
    write_block = 0 '\000', write_close = 0 '\000',
    app_shutdown = 0 '\000', app_close = 0 '\000',
    opened = 0 '\000'}, server = {port = {data = 0x66203763,
      peer = 0x63362038, factory = 0x20613020,
      ses_ctx = 0x32206666, {n_out_block = 57 '9',
        n_in_block = 32 ' ', closed = 1 '\001',
        grace_close = 0 '\000', in_shutdown = 0 '\000',
---Type <return> to continue, or q <return> to quit---
        in_close = 0 '\000', out_shutdown = 1 '\001',
        out_close = 1 '\001', av_redir = 0 '\000',
        start_fired = 0 '\000', is_redir_port = 0 '\000'},
      type = 540501536, {tcp_port = 0x33203034,
        tunnel_port = 0x33203034, compressor = 0x33203034,
        ssl_app = 0x33203034, ssl_sock = 0x33203034,
        ssl_proxy = 0x33203034, stream_port = 0x33203034,
        ips_port = 0x33203034, rtmp_port = 0x33203034},
      out_ops = 0x39392065, in_ops = 0x20333220},
    session = 0x61206632, out_len = 892805176, output = {
      regions = {next = 0x20373720, prev = 0x64206462},
      n_regions = 892608569}, rtmp = 0x20313220,
    write_block = 0 '\000', write_close = 0 '\000',
    app_shutdown = 1 '\001', app_close = 0 '\000',
---Type <return> to continue, or q <return> to quit---q
opened = 0 '\000Quit
(gdb) p *rtmpt_ses->client.port
Structure has no component named operator*.
(gdb) p rtmpt_ses->client.port
$13 = {data = 0x20396120, peer = 0x66203136,
  factory = 0x62372034, ses_ctx = 0x20353120, {
    n_out_block = 55 '7', n_in_block = 99 'c', closed = 0 '\000',
    grace_close = 0 '\000', in_shutdown = 0 '\000',
    in_close = 0 '\000', out_shutdown = 0 '\000',
    out_close = 1 '\001', av_redir = 0 '\000',
    start_fired = 0 '\000', is_redir_port = 0 '\000'},
  type = 876093494, {tcp_port = 0x20303520,
    tunnel_port = 0x20303520, compressor = 0x20303520,
    ssl_app = 0x20303520, ssl_sock = 0x20303520,
    ssl_proxy = 0x20303520, stream_port = 0x20303520,
    ips_port = 0x20303520, rtmp_port = 0x20303520},
  out_ops = 0x66203434, in_ops = 0x63322034}
(gdb) p rtmpt_ses->client.port.in_ops
$14 = (struct wad_port_ops *) 0x63322034
(gdb) p *rtmpt_ses->client.port.in_ops
Cannot access memory at address 0x63322034
(gdb) p *(rtmpt_ses->client.port.in_ops )
Cannot access memory at address 0x63322034
(gdb) p (rtmpt_ses->client.port.in_ops)
$15 = (struct wad_port_ops *) 0x63322034
(gdb) p **(rtmpt_ses->client.port.in_ops)
Structure has no component named operator*.
(gdb) p *(rtmpt_ses->client.port.in_ops)
Cannot access memory at address 0x63322034
(gdb) p *(rtmpt_ses->server.port.in_ops)
Cannot access memory at address 0x20333220
(gdb) p *(rtmpt_ses->server.port.out_ops)
Cannot access memory at address 0x39392065
(gdb) p *(rtmpt_ses->client.port.out_ops)
Cannot access memory at address 0x66203434
(gdb) p rtmpt_ses->client.port.out_ops->read_region
Cannot access memory at address 0x66203438
(gdb) p rtmpt_ses->client.port.out_ops->read_region
Cannot access memory at address 0x66203438
(gdb) p rtmpt_ses->server.port.out_ops->read_region
Cannot access memory at address 0x39392069
(gdb) p rtmpt_ses
$16 = (struct wad_rtmpt_session *) 0x40e4002c
(gdb) p br
$17 = (struct wad_buff_region *) 0x40f4ad2c
(gdb) where
#0  0x09290904 in wad_rtmpt_srv_intercept_proc_region (
    hstrm=0x40d91bac, br=0x40f4ad2c) at wad_http_cache.c:10633
#1  0x092ef1e3 in wad_http_stream_read_normal_body (
    hstrm=0x40d91bac) at wad_http_parser.c:3595
#2  0x0929f985 in wad_http_server_read_sync (port=0x40b66650)
    at wad_http_cache.c:13476
#3  0x0920340a in wad_port_tp_glue_in_read_sync (port=0x40b66650)
    at wad_app_eng.c:362
#4  0x09377555 in wad_tcp_port_on_read (tcp_port=0x40b66650,
    last_read=0) at wad_tcp_port.c:1443
#5  0x09377824 in wad_tcp_port_on_event (e=0x419a50e0,
    ev=WAD_SCHED_EVENT_READABLE) at wad_tcp_port.c:1513
#6  0x0934ec4c in wad_sched_process_events (n=1)
    at scheduler/epoll/wad_sched.c:58
---Type <return> to continue, or q <return> to quit---
#7  0x0934ee66 in wad_sched_start ()
    at scheduler/epoll/wad_sched.c:135
#8  0x0938bdb2 in wad_ui_main (argc=3, argv=0xbfffff54)
    at ui/fg/wad_ui.c:521
#9  0x08066354 in fortiexec_call_main (argc=3, argv=0xbfffff54)
    at fortiexec.c:666
#10 0x08065c52 in main (argc=3, argv=0xbfffff54) at init.c:2428
(gdb) p *br
$18 = {list = {next = 0x0, prev = 0x0}, buff = 0x4197bce0,
  start = 1008, end = 4076, ref_count = 1}
(gdb) frame
#0  0x09290904 in wad_rtmpt_srv_intercept_proc_region (
    hstrm=0x40d91bac, br=0x40f4ad2c) at wad_http_cache.c:10633
10633                   return port->in_ops->read_region(port, br);
(gdb) info locals
port = 0x40e400c8
hcs = 0x40b768e4
resp = 0x40b9532c
rtmpt_ses = 0x40e4002c
__FUNCTION__ = "wad_rtmpt_srv_intercept_proc_region"
(gdb) info args
hstrm = 0x40d91bac
br = 0x40f4ad2c
(gdb) pt
type = struct wad_buff_region {
    struct list_head list;
    struct wad_str *buff;
    unsigned int start;
    unsigned int end;
    unsigned int ref_count;
}
(gdb) pr
Ambiguous command "pr": print, print-object, printf.
(gdb) pt
type = struct wad_buff_region {
    struct list_head list;
    struct wad_str *buff;
    unsigned int start;
    unsigned int end;
    unsigned int ref_count;
}
(gdb) ptype
type = struct wad_buff_region {
    struct list_head list;
    struct wad_str *buff;
    unsigned int start;
    unsigned int end;
    unsigned int ref_count;
}
(gdb) p rtmp
rtmp
rtmp_amf_error_set
rtmp_amf_result_set
rtmp_bandwidth_type_limit_dynamic
rtmp_bandwidth_type_limit_hard
rtmp_bandwidth_type_limit_soft
rtmp_conf
rtmp_conf_
rtmp_ctrlmsg_evt_buffer_empty
rtmp_ctrlmsg_evt_buffer_ready
rtmp_ctrlmsg_evt_ping_request
rtmp_ctrlmsg_evt_ping_response
rtmp_ctrlmsg_evt_request_verify
rtmp_ctrlmsg_evt_respond_verify
rtmp_ctrlmsg_evt_set_buffer_length
rtmp_ctrlmsg_evt_stream_begin
rtmp_ctrlmsg_evt_stream_dry
rtmp_ctrlmsg_evt_stream_eof
rtmp_ctrlmsg_evt_stream_is_recorded
rtmp_fmt0_hdr_full
rtmp_fmt1_hdr_same_stream
rtmp_fmt2_hdr_same_stream_type_length
rtmp_fmt3_hdr_continue
rtmp_live_close_notifier
rtmp_live_data_notifier
rtmp_live_object_hash_map
rtmp_msgstage_chunk_data
rtmp_msgstage_csid
rtmp_msgstage_fmt
rtmp_msgstage_hdr
rtmp_msgstage_msg_hdr
rtmp_msgtype_abort_message
rtmp_msgtype_acknowledgement
rtmp_msgtype_aggregate
rtmp_msgtype_audio_type
rtmp_msgtype_command_amf0
rtmp_msgtype_command_amf3
rtmp_msgtype_invalid
rtmp_msgtype_max
rtmp_msgtype_metadata_amf0
rtmp_msgtype_metadata_amf3
rtmp_msgtype_set_chunk_size
rtmp_msgtype_set_peer_bandwidth
rtmp_msgtype_shared_object_amf0
rtmp_msgtype_shared_object_amf3
rtmp_msgtype_user_control_message
rtmp_msgtype_video_type
rtmp_msgtype_window_acknowledgement_size
rtmp_prof
rtmp_profile
rtmp_profile.c
rtmp_profile_generation
rtmp_stage_close
rtmp_stage_connect
rtmp_stage_create_stream
rtmp_stage_handshake
rtmp_stage_handshake_done
rtmp_stage_pause
rtmp_stage_pause_req
rtmp_stage_play
rtmp_stage_play_complete
rtmp_stage_play_stop
rtmp_stage_seek
rtmp_stage_shutdown
rtmp_stage_unpause
rtmp_stage_unpause_req
rtmp_status
rtmp_str_casecmp
rtmp_str_cmp
rtmp_str_t
rtmpt_dirty
rtmpt_enabled
rtmpt_info
rtmpt_intercept_clt_ops
rtmpt_intercept_srv_ops
rtmpt_monitor_srv_ops
rtmpt_req_elts
rtmpt_request
rtmpt_request_firstbyte
rtmpt_resp
rtmpt_response
rtmpt_response_firstbyte
rtmpt_ses
rtmpt_ses_tl
rtmpt_support_firstbyte
rtmpt_type
(gdb) p rtmp
rtmp
rtmp_amf_error_set
rtmp_amf_result_set
rtmp_bandwidth_type_limit_dynamic
rtmp_bandwidth_type_limit_hard
rtmp_bandwidth_type_limit_soft
rtmp_conf
rtmp_conf_
rtmp_ctrlmsg_evt_buffer_empty
rtmp_ctrlmsg_evt_buffer_ready
rtmp_ctrlmsg_evt_ping_request
rtmp_ctrlmsg_evt_ping_response
rtmp_ctrlmsg_evt_request_verify
rtmp_ctrlmsg_evt_respond_verify
rtmp_ctrlmsg_evt_set_buffer_length
rtmp_ctrlmsg_evt_stream_begin
rtmp_ctrlmsg_evt_stream_dry
rtmp_ctrlmsg_evt_stream_eof
rtmp_ctrlmsg_evt_stream_is_recorded
rtmp_fmt0_hdr_full
rtmp_fmt1_hdr_same_stream
rtmp_fmt2_hdr_same_stream_type_length
rtmp_fmt3_hdr_continue
rtmp_live_close_notifier
rtmp_live_data_notifier
rtmp_live_object_hash_map
rtmp_msgstage_chunk_data
rtmp_msgstage_csid
rtmp_msgstage_fmt
rtmp_msgstage_hdr
rtmp_msgstage_msg_hdr
rtmp_msgtype_abort_message
rtmp_msgtype_acknowledgement
rtmp_msgtype_aggregate
rtmp_msgtype_audio_type
rtmp_msgtype_command_amf0
rtmp_msgtype_command_amf3
rtmp_msgtype_invalid
rtmp_msgtype_max
rtmp_msgtype_metadata_amf0
rtmp_msgtype_metadata_amf3
rtmp_msgtype_set_chunk_size
rtmp_msgtype_set_peer_bandwidth
rtmp_msgtype_shared_object_amf0
rtmp_msgtype_shared_object_amf3
rtmp_msgtype_user_control_message
rtmp_msgtype_video_type
rtmp_msgtype_window_acknowledgement_size
rtmp_prof
rtmp_profile
rtmp_profile.c
rtmp_profile_generation
rtmp_stage_close
rtmp_stage_connect
rtmp_stage_create_stream
rtmp_stage_handshake
rtmp_stage_handshake_done
rtmp_stage_pause
rtmp_stage_pause_req
rtmp_stage_play
rtmp_stage_play_complete
rtmp_stage_play_stop
rtmp_stage_seek
rtmp_stage_shutdown
rtmp_stage_unpause
rtmp_stage_unpause_req
rtmp_status
rtmp_str_casecmp
rtmp_str_cmp
rtmp_str_t
rtmpt_dirty
rtmpt_enabled
rtmpt_info
rtmpt_intercept_clt_ops
rtmpt_intercept_srv_ops
rtmpt_monitor_srv_ops
rtmpt_req_elts
rtmpt_request
rtmpt_request_firstbyte
rtmpt_resp
rtmpt_response
rtmpt_response_firstbyte
rtmpt_ses
rtmpt_ses_tl
rtmpt_support_firstbyte
rtmpt_type
(gdb) p rtmpt_ses
$19 = (struct wad_rtmpt_session *) 0x40e4002c
(gdb) p rtmpt_ses->server
$20 = {port = {data = 0x66203763, peer = 0x63362038,
    factory = 0x20613020, ses_ctx = 0x32206666, {
      n_out_block = 57 '9', n_in_block = 32 ' ',
      closed = 1 '\001', grace_close = 0 '\000',
      in_shutdown = 0 '\000', in_close = 0 '\000',
      out_shutdown = 1 '\001', out_close = 1 '\001',
      av_redir = 0 '\000', start_fired = 0 '\000',
      is_redir_port = 0 '\000'}, type = 540501536, {
      tcp_port = 0x33203034, tunnel_port = 0x33203034,
      compressor = 0x33203034, ssl_app = 0x33203034,
      ssl_sock = 0x33203034, ssl_proxy = 0x33203034,
      stream_port = 0x33203034, ips_port = 0x33203034,
      rtmp_port = 0x33203034}, out_ops = 0x39392065,
    in_ops = 0x20333220}, session = 0x61206632,
---Type <return> to continue, or q <return> to quit---q
out_len = 892805176Quit
(gdb) p rtmpt_ses->server->port
$21 = {data = 0x66203763, peer = 0x63362038,
  factory = 0x20613020, ses_ctx = 0x32206666, {
    n_out_block = 57 '9', n_in_block = 32 ' ', closed = 1 '\001',
    grace_close = 0 '\000', in_shutdown = 0 '\000',
    in_close = 0 '\000', out_shutdown = 1 '\001',
    out_close = 1 '\001', av_redir = 0 '\000',
    start_fired = 0 '\000', is_redir_port = 0 '\000'},
  type = 540501536, {tcp_port = 0x33203034,
    tunnel_port = 0x33203034, compressor = 0x33203034,
    ssl_app = 0x33203034, ssl_sock = 0x33203034,
    ssl_proxy = 0x33203034, stream_port = 0x33203034,
    ips_port = 0x33203034, rtmp_port = 0x33203034},
  out_ops = 0x39392065, in_ops = 0x20333220}
(gdb) p rtmpt_ses->server->port->in_ops
$22 = (struct wad_port_ops *) 0x20333220
(gdb) frame 1
#1  0x092ef1e3 in wad_http_stream_read_normal_body (
    hstrm=0x40d91bac) at wad_http_parser.c:3595
3595                            ret = hstrm->ops->proc_region(hstrm, br);
(gdb) frame 2
#2  0x0929f985 in wad_http_server_read_sync (port=0x40b66650)
    at wad_http_cache.c:13476
13476           while( ((ret = stream->execute(stream)) > 0) && (!srv->pause || no_pause)) {
(gdb) frame 0
#0  0x09290904 in wad_rtmpt_srv_intercept_proc_region (
    hstrm=0x40d91bac, br=0x40f4ad2c) at wad_http_cache.c:10633
10633                   return port->in_ops->read_region(port, br);
(gdb) frame 3
#3  0x0920340a in wad_port_tp_glue_in_read_sync (port=0x40b66650)
    at wad_app_eng.c:362
362             return port->in_ops->read_sync(port);
(gdb) frame 2
#2  0x0929f985 in wad_http_server_read_sync (port=0x40b66650)
    at wad_http_cache.c:13476
13476           while( ((ret = stream->execute(stream)) > 0) && (!srv->pause || no_pause)) {
(gdb) frame 1
#1  0x092ef1e3 in wad_http_stream_read_normal_body (
    hstrm=0x40d91bac) at wad_http_parser.c:3595
3595                            ret = hstrm->ops->proc_region(hstrm, br);
(gdb) frame 0
#0  0x09290904 in wad_rtmpt_srv_intercept_proc_region (
    hstrm=0x40d91bac, br=0x40f4ad2c) at wad_http_cache.c:10633
10633                   return port->in_ops->read_region(port, br);
(gdb) p port
$23 = (struct wad_port *) 0x40e400c8
(gdb) p br
$24 = (struct wad_buff_region *) 0x40f4ad2c
(gdb) p *br
$25 = {list = {next = 0x0, prev = 0x0}, buff = 0x4197bce0,
  start = 1008, end = 4076, ref_count = 1}
(gdb) disass /m wad_rtmpt_srv_intercept_proc_region
Dump of assembler code for function wad_rtmpt_srv_intercept_proc_region:
10616   {
   0x0929075b <+0>:     push   %ebp
   0x0929075c <+1>:     mov    %esp,%ebp
   0x0929075e <+3>:     sub    $0x28,%esp
   0x09290761 <+6>:     mov    0xaed0fe0,%eax
   0x09290766 <+11>:    mov    0xaed0fe4,%edx
   0x0929076c <+17>:    add    $0x1,%eax
   0x0929076f <+20>:    adc    $0x0,%edx
   0x09290772 <+23>:    mov    %eax,0xaed0fe0
   0x09290777 <+28>:    mov    %edx,0xaed0fe4

10617           struct wad_http_session *hcs = hstrm->hs;
---Type <return> to continue, or q <return> to quit---
   0x0929077d <+34>:    mov    0x8(%ebp),%eax
   0x09290780 <+37>:    mov    (%eax),%eax
   0x09290782 <+39>:    mov    %eax,-0xc(%ebp)

10618           struct wad_http_response *resp = hcs->rtmpt_resp;
   0x09290785 <+42>:    mov    -0xc(%ebp),%eax
   0x09290788 <+45>:    mov    0x1a0(%eax),%eax
   0x0929078e <+51>:    mov    %eax,-0x10(%ebp)

10619           struct wad_rtmpt_session *rtmpt_ses = hcs->rtmpt_info.rs;
   0x09290791 <+54>:    mov    -0xc(%ebp),%eax
   0x09290794 <+57>:    mov    0x184(%eax),%eax
   0x0929079a <+63>:    mov    %eax,-0x14(%ebp)
---Type <return> to continue, or q <return> to quit---

10620
10621           WAD_TRACE(WAD_DEBUG_RTMP, "len=%d\n", br->end - br->start);
   0x0929079d <+66>:    mov    0xb0cd7c4,%eax
   0x092907a2 <+71>:    mov    (%eax),%eax
   0x092907a4 <+73>:    and    $0x2000000,%eax
   0x092907a9 <+78>:    test   %eax,%eax
   0x092907ab <+80>:    je     0x9290842 <wad_rtmpt_srv_intercept_proc_region+231>
   0x092907b1 <+86>:    mov    0xaed0fe8,%eax
   0x092907b6 <+91>:    mov    0xaed0fec,%edx
   0x092907bc <+97>:    add    $0x1,%eax
   0x092907bf <+100>:   adc    $0x0,%edx
---Type <return> to continue, or q <return> to quit---
   0x092907c2 <+103>:   mov    %eax,0xaed0fe8
   0x092907c7 <+108>:   mov    %edx,0xaed0fec
   0x092907cd <+114>:   call   0x922a31d <WAD_DEBUG_FILTER>
   0x092907d2 <+119>:   mov    %eax,%ecx
   0x092907d4 <+121>:   mov    0xaed0ff0,%eax
   0x092907d9 <+126>:   mov    0xaed0ff4,%edx
   0x092907df <+132>:   add    $0x1,%eax
   0x092907e2 <+135>:   adc    $0x0,%edx
   0x092907e5 <+138>:   mov    %eax,0xaed0ff0
   0x092907ea <+143>:   mov    %edx,0xaed0ff4
   0x092907f0 <+149>:   test   %ecx,%ecx
   0x092907f2 <+151>:   je     0x9290842 <wad_rtmpt_srv_intercept_proc_region+231>
   0x092907f4 <+153>:   mov    0xaed0ff8,%eax
---Type <return> to continue, or q <return> to quit---
   0x092907f9 <+158>:   mov    0xaed0ffc,%edx
   0x092907ff <+164>:   add    $0x1,%eax
   0x09290802 <+167>:   adc    $0x0,%edx
   0x09290805 <+170>:   mov    %eax,0xaed0ff8
   0x0929080a <+175>:   mov    %edx,0xaed0ffc
   0x09290810 <+181>:   mov    0xc(%ebp),%eax
   0x09290813 <+184>:   mov    0x10(%eax),%edx
   0x09290816 <+187>:   mov    0xc(%ebp),%eax
   0x09290819 <+190>:   mov    0xc(%eax),%eax
   0x0929081c <+193>:   mov    %edx,%ecx
   0x0929081e <+195>:   sub    %eax,%ecx
   0x09290820 <+197>:   mov    %ecx,%eax
   0x09290822 <+199>:   mov    %eax,0xc(%esp)
   0x09290826 <+203>:   movl   $0x297d,0x8(%esp)
---Type <return> to continue, or q <return> to quit---
   0x0929082e <+211>:   movl   $0xa0a7e60,0x4(%esp)
   0x09290836 <+219>:   movl   $0xa0a1e09,(%esp)
   0x0929083d <+226>:   call   0x922a5dc <__WAD_DUMP>

10622
10623           if (resp && resp->body_len > 1) {
   0x09290842 <+231>:   cmpl   $0x0,-0x10(%ebp)
   0x09290846 <+235>:   je     0x9290936 <wad_rtmpt_srv_intercept_proc_region+475>
   0x0929084c <+241>:   mov    0xaed1000,%eax
   0x09290851 <+246>:   mov    0xaed1004,%edx
   0x09290857 <+252>:   add    $0x1,%eax
   0x0929085a <+255>:   adc    $0x0,%edx
   0x0929085d <+258>:   mov    %eax,0xaed1000
---Type <return> to continue, or q <return> to quit---
   0x09290862 <+263>:   mov    %edx,0xaed1004
   0x09290868 <+269>:   mov    -0x10(%ebp),%eax
   0x0929086b <+272>:   mov    0x24(%eax),%edx
   0x0929086e <+275>:   mov    0x20(%eax),%eax
   0x09290871 <+278>:   cmp    $0x0,%edx
   0x09290874 <+281>:   jb     0x9290952 <wad_rtmpt_srv_intercept_proc_region+503>
   0x0929087a <+287>:   cmp    $0x0,%edx
   0x0929087d <+290>:   ja     0x9290888 <wad_rtmpt_srv_intercept_proc_region+301>
   0x0929087f <+292>:   cmp    $0x1,%eax
   0x09290882 <+295>:   jbe    0x9290952 <wad_rtmpt_srv_intercept_proc_region+503>
   0x09290888 <+301>:   mov    0xaed1010,%eax
---Type <return> to continue, or q <return> to quit---
   0x0929088d <+306>:   mov    0xaed1014,%edx
   0x09290893 <+312>:   add    $0x1,%eax
   0x09290896 <+315>:   adc    $0x0,%edx
   0x09290899 <+318>:   mov    %eax,0xaed1010
   0x0929089e <+323>:   mov    %edx,0xaed1014

10624                   struct wad_port *port = &rtmpt_ses->server.port;
   0x092908a4 <+329>:   mov    -0x14(%ebp),%eax
   0x092908a7 <+332>:   add    $0x9c,%eax
   0x092908ac <+337>:   mov    %eax,-0x18(%ebp)

10625
10626                   /* skip the whole body's first byte */
---Type <return> to continue, or q <return> to quit---
10627                   if (!rtmpt_ses->response_have_skip_1st_byte) {
   0x092908af <+340>:   mov    -0x14(%ebp),%eax
   0x092908b2 <+343>:   movzbl 0x11b(%eax),%eax
   0x092908b9 <+350>:   and    $0x20,%eax
   0x092908bc <+353>:   test   %al,%al
   0x092908be <+355>:   jne    0x92908fe <wad_rtmpt_srv_intercept_proc_region+419>

10628                           rtmpt_ses->response_have_skip_1st_byte = 1;
   0x092908c0 <+357>:   mov    -0x14(%ebp),%eax
   0x092908c3 <+360>:   movzbl 0x11b(%eax),%edx
   0x092908ca <+367>:   or     $0x20,%edx
---Type <return> to continue, or q <return> to quit---
   0x092908cd <+370>:   mov    %dl,0x11b(%eax)

10629                           br->start ++;
   0x092908d3 <+376>:   mov    0xc(%ebp),%eax
   0x092908d6 <+379>:   mov    0xc(%eax),%eax
   0x092908d9 <+382>:   lea    0x1(%eax),%edx
   0x092908dc <+385>:   mov    0xc(%ebp),%eax
   0x092908df <+388>:   mov    %edx,0xc(%eax)
   0x092908e2 <+391>:   mov    0xaed1018,%eax
   0x092908e7 <+396>:   mov    0xaed101c,%edx
   0x092908ed <+402>:   add    $0x1,%eax
   0x092908f0 <+405>:   adc    $0x0,%edx
   0x092908f3 <+408>:   mov    %eax,0xaed1018
   0x092908f8 <+413>:   mov    %edx,0xaed101c
---Type <return> to continue, or q <return> to quit---

10630                   }
10631
10632                   /* forward the data to RTMP layer*/
10633                   return port->in_ops->read_region(port, br);
   0x092908fe <+419>:   mov    -0x18(%ebp),%eax
   0x09290901 <+422>:   mov    0x20(%eax),%eax
=> 0x09290904 <+425>:   mov    0x4(%eax),%eax
   0x09290907 <+428>:   mov    0xc(%ebp),%edx
   0x0929090a <+431>:   mov    %edx,0x4(%esp)
   0x0929090e <+435>:   mov    -0x18(%ebp),%edx
   0x09290911 <+438>:   mov    %edx,(%esp)
   0x09290914 <+441>:   call   *%eax
---Type <return> to continue, or q <return> to quit---
   0x09290916 <+443>:   mov    %eax,%ecx
   0x09290918 <+445>:   mov    0xaed1020,%eax
   0x0929091d <+450>:   mov    0xaed1024,%edx
   0x09290923 <+456>:   add    $0x1,%eax
   0x09290926 <+459>:   adc    $0x0,%edx
   0x09290929 <+462>:   mov    %eax,0xaed1020
   0x0929092e <+467>:   mov    %edx,0xaed1024
   0x09290934 <+473>:   jmp    0x9290986 <wad_rtmpt_srv_intercept_proc_region+555>
   0x09290936 <+475>:   mov    0xaed1008,%eax
   0x0929093b <+480>:   mov    0xaed100c,%edx
   0x09290941 <+486>:   add    $0x1,%eax
   0x09290944 <+489>:   adc    $0x0,%edx
   0x09290947 <+492>:   mov    %eax,0xaed1008
---Type <return> to continue, or q <return> to quit---q
Quit
(gdb) bt
#0  0x09290904 in wad_rtmpt_srv_intercept_proc_region (
    hstrm=0x40d91bac, br=0x40f4ad2c) at wad_http_cache.c:10633
#1  0x092ef1e3 in wad_http_stream_read_normal_body (
    hstrm=0x40d91bac) at wad_http_parser.c:3595
#2  0x0929f985 in wad_http_server_read_sync (port=0x40b66650)
    at wad_http_cache.c:13476
#3  0x0920340a in wad_port_tp_glue_in_read_sync (port=0x40b66650)
    at wad_app_eng.c:362
#4  0x09377555 in wad_tcp_port_on_read (tcp_port=0x40b66650,
    last_read=0) at wad_tcp_port.c:1443
#5  0x09377824 in wad_tcp_port_on_event (e=0x419a50e0,
    ev=WAD_SCHED_EVENT_READABLE) at wad_tcp_port.c:1513
#6  0x0934ec4c in wad_sched_process_events (n=1)
    at scheduler/epoll/wad_sched.c:58
---Type <return> to continue, or q <return> to quit---
#7  0x0934ee66 in wad_sched_start ()
    at scheduler/epoll/wad_sched.c:135
#8  0x0938bdb2 in wad_ui_main (argc=3, argv=0xbfffff54)
    at ui/fg/wad_ui.c:521
#9  0x08066354 in fortiexec_call_main (argc=3, argv=0xbfffff54)
    at fortiexec.c:666
#10 0x08065c52 in main (argc=3, argv=0xbfffff54) at init.c:2428
(gdb) p $eax
$26 = 540226080
(gdb) p %eax
A syntax error in expression, near `%eax'.
(gdb) p $eax
$27 = 540226080
(gdb) info registers eax
eax            0x20333220       540226080
(gdb) info registers eip
eip            0x9290904        0x9290904 <wad_rtmpt_srv_intercept_proc_region+425>
(gdb) info registers rip
Invalid register `rip'
(gdb) info locals
port = 0x40e400c8
hcs = 0x40b768e4
resp = 0x40b9532c
rtmpt_ses = 0x40e4002c
__FUNCTION__ = "wad_rtmpt_srv_intercept_proc_region"
(gdb) bt
#0  0x09290904 in wad_rtmpt_srv_intercept_proc_region (
    hstrm=0x40d91bac, br=0x40f4ad2c) at wad_http_cache.c:10633
#1  0x092ef1e3 in wad_http_stream_read_normal_body (
    hstrm=0x40d91bac) at wad_http_parser.c:3595
#2  0x0929f985 in wad_http_server_read_sync (port=0x40b66650)
    at wad_http_cache.c:13476
#3  0x0920340a in wad_port_tp_glue_in_read_sync (port=0x40b66650)
    at wad_app_eng.c:362
#4  0x09377555 in wad_tcp_port_on_read (tcp_port=0x40b66650,
    last_read=0) at wad_tcp_port.c:1443
#5  0x09377824 in wad_tcp_port_on_event (e=0x419a50e0,
    ev=WAD_SCHED_EVENT_READABLE) at wad_tcp_port.c:1513
#6  0x0934ec4c in wad_sched_process_events (n=1)
    at scheduler/epoll/wad_sched.c:58
---Type <return> to continue, or q <return> to quit---q
Quit
(gdb) p port->in_ops
$28 = (struct wad_port_ops *) 0x20333220
(gdb) p port->in_ops->read
read              read_cache_start  read_region
read_block        read_cache_stop   read_sync
(gdb) p port->in_ops->read
read              read_cache_start  read_region
read_block        read_cache_stop   read_sync
(gdb) p port->in_ops->read_region
Cannot access memory at address 0x20333224
(gdb) p port->out_ops->read_region
Cannot access memory at address 0x39392069
(gdb) p hcs->
as                  host_ip_invalid     proto
client              hrr                 req
client_closed       http_detect_state   reqq
comfort_req         http_srv            rtmpt_info
comfort_resp        ib_rtmpt_client_id  rtmpt_resp
deep_scan           icap                src_addr_type
dns_req             link                srv_addr
forward_server      no_pause            srv_closing
f_srv_closed        no_reply            svr_proc_cnt
ftp_srv             not_bad_gw          user_node
has_fwd_srv_conn    pol_result
has_srv_ip          processing
(gdb) p hcs->client->
body_pause                  out_ifidx
cache_lock                  pause
cache_obj                   port_paused
conn_pause                  read_block
conn_paused                 read_block_miss
continue_req                read_more_cache
continue_scan_req_release   reply_state
continue_scan_req_result    req
continue_scan_resp_release  resp
continue_scan_resp_result   resume_read
continue_send               resume_tunnel_setup
disconn_all                 route_version
disconn_server              srv_addr
hdr_pause                   srv_name
hl                          stream
nreq_pause                  task_link
(gdb) p hcs->client->stream.ops->
A syntax error in expression, near `'.
(gdb) p hcs->client->stream.ops
$29 = (struct wad_http_stream_ops *) 0xa9c33e0 <wad_http_client_ops>
(gdb) p hcs->client->stream.ops->body_start
$30 = (int (*)(struct wad_http_stream *, unsigned int)) 0x0
(gdb) p hcs->client->stream.ops->body_done
$31 = (int (*)(struct wad_http_stream *,
    int)) 0x92c0d26 <wad_http_client_body_done>
(gdb) p port->out_ops->read_region
Cannot access memory at address 0x39392069
(gdb) p port
$32 = (struct wad_port *) 0x40e400c8
(gdb) where
#0  0x09290904 in wad_rtmpt_srv_intercept_proc_region (
    hstrm=0x40d91bac, br=0x40f4ad2c) at wad_http_cache.c:10633
#1  0x092ef1e3 in wad_http_stream_read_normal_body (
    hstrm=0x40d91bac) at wad_http_parser.c:3595
#2  0x0929f985 in wad_http_server_read_sync (port=0x40b66650)
    at wad_http_cache.c:13476
#3  0x0920340a in wad_port_tp_glue_in_read_sync (port=0x40b66650)
    at wad_app_eng.c:362
#4  0x09377555 in wad_tcp_port_on_read (tcp_port=0x40b66650,
    last_read=0) at wad_tcp_port.c:1443
#5  0x09377824 in wad_tcp_port_on_event (e=0x419a50e0,
    ev=WAD_SCHED_EVENT_READABLE) at wad_tcp_port.c:1513
#6  0x0934ec4c in wad_sched_process_events (n=1)
    at scheduler/epoll/wad_sched.c:58
---Type <return> to continue, or q <return> to quit---
#7  0x0934ee66 in wad_sched_start ()
    at scheduler/epoll/wad_sched.c:135
#8  0x0938bdb2 in wad_ui_main (argc=3, argv=0xbfffff54)
    at ui/fg/wad_ui.c:521
#9  0x08066354 in fortiexec_call_main (argc=3, argv=0xbfffff54)
    at fortiexec.c:666
#10 0x08065c52 in main (argc=3, argv=0xbfffff54) at init.c:2428
(gdb) br wad_http_cache.c:10633
Breakpoint 1 at 0x92908fe: file wad_http_cache.c, line 10633.
(gdb) c
Continuing.
warning: Could not load shared library symbols for ../lib/libgcc_s.so.1.
Do you need "set solib-search-path" or "set sysroot"?
[Inferior 1 (process 202) exited with code 013]
(gdb) target remote 10.1.2.124:444
Remote debugging using 10.1.2.124:444
warning: Could not load shared library symbols for 17 libraries, e.g. ../lib/libssl.so.1.0.0.
Use the "info sharedlibrary" command to see the complete listing.
Do you need "set solib-search-path" or "set sysroot"?
Reading symbols from /fortidev4/lib/ld-linux.so.2...done.
Loaded symbols for /fortidev4/lib/ld-linux.so.2
Reading symbols from /fortidev4/lib/libfreetype.so.6...done.
Loaded symbols for /fortidev4/lib/libfreetype.so.6
0x40001012 in _dl_sysinfo_int80 ()
   from /fortidev4/lib/ld-linux.so.2
(gdb) c
Continuing.

Breakpoint 1, wad_rtmpt_srv_intercept_proc_region (
    hstrm=0x40d2df1c, br=0x40e1a574) at wad_http_cache.c:10633
10633                   return port->in_ops->read_region(port, br);
(gdb) p rt
Display all 159 possibilities? (y or n)
rt0_hdr
rt28xx_ioctl.h
rt28xxreq_scan_result
rta_addattr32
rta_addattr_l
rtable
rtable_ent_same_value
rtable_key
rta_cacheinfo
rtattr
rtattr_parse
rtattr_type_t
rtcache
rtcache_ctx
rtcache_list_act
rtcache_list_oper
rtc.h
rt_class_t
rtcp_tuple_lookup
rtc_time
rte
rtentry
rtf_crc32
rtf_crc32_init
rtf_crc32_table
rtf_decomp
rtf_decomp_sz
rtf_init_dict
rtgenmsg
rth
rtld.c
rtld_errno
rtld_global
rtld_global_ro
rtld_lock_default_lock_recursive
rtld_lock_default_unlock_recursive
rtld_search_dirs
rtld-strnlen.c
rtlib6.c
rtlib.c
rtmon_dump_val
rtmp
rtmp_amf_error_set
rtmp_amf_result_set
rtmp_bandwidth_type_limit_dynamic
rtmp_bandwidth_type_limit_hard
rtmp_bandwidth_type_limit_soft
rtmp_conf
rtmp_conf_
rtmp_ctrlmsg_evt_buffer_empty
rtmp_ctrlmsg_evt_buffer_ready
rtmp_ctrlmsg_evt_ping_request
rtmp_ctrlmsg_evt_ping_response
rtmp_ctrlmsg_evt_request_verify
rtmp_ctrlmsg_evt_respond_verify
rtmp_ctrlmsg_evt_set_buffer_length
rtmp_ctrlmsg_evt_stream_begin
rtmp_ctrlmsg_evt_stream_dry
rtmp_ctrlmsg_evt_stream_eof
rtmp_ctrlmsg_evt_stream_is_recorded
rtmp_fmt0_hdr_full
rtmp_fmt1_hdr_same_stream
rtmp_fmt2_hdr_same_stream_type_length
rtmp_fmt3_hdr_continue
rtmp_live_close_notifier
rtmp_live_data_notifier
rtmp_live_object_hash_map
rtmp_msgstage_chunk_data
rtmp_msgstage_csid
rtmp_msgstage_fmt
rtmp_msgstage_hdr
rtmp_msgstage_msg_hdr
rtmp_msgtype_abort_message
rtmp_msgtype_acknowledgement
rtmp_msgtype_aggregate
rtmp_msgtype_audio_type
rtmp_msgtype_command_amf0
rtmp_msgtype_command_amf3
rtmp_msgtype_invalid
rtmp_msgtype_max
rtmp_msgtype_metadata_amf0
rtmp_msgtype_metadata_amf3
rtmp_msgtype_set_chunk_size
rtmp_msgtype_set_peer_bandwidth
rtmp_msgtype_shared_object_amf0
rtmp_msgtype_shared_object_amf3
rtmp_msgtype_user_control_message
rtmp_msgtype_video_type
rtmp_msgtype_window_acknowledgement_size
rtmp_prof
rtmp_profile
rtmp_profile.c
rtmp_profile_generation
rtmp_stage_close
rtmp_stage_connect
rtmp_stage_create_stream
rtmp_stage_handshake
rtmp_stage_handshake_done
rtmp_stage_pause
rtmp_stage_pause_req
rtmp_stage_play
rtmp_stage_play_complete
rtmp_stage_play_stop
rtmp_stage_seek
rtmp_stage_shutdown
rtmp_stage_unpause
rtmp_stage_unpause_req
rtmp_status
rtmp_str_casecmp
rtmp_str_cmp
rtmp_str_t
rtmpt_dirty
rtmpt_enabled
rtmpt_info
rtmpt_intercept_clt_ops
rtmpt_intercept_srv_ops
rtmpt_monitor_srv_ops
rtmpt_req_elts
rtmpt_request
rtmpt_request_firstbyte
rtmpt_resp
rtmpt_response
rtmpt_response_firstbyte
rtmpt_ses
rtmpt_ses_tl
rtmpt_support_firstbyte
rtmpt_type
rtmsg
rtnetlink.h
rtnexthop
rtnl_dump_filter
rtnl_dump_request
rtnl_dump_set_timeout
rtnl_filter_timeout
rtnl_handle
rtnl_listen
rtnl_open
rtnl_send
rtnl_talk
rtnl_wilddump_request
rtp_deserialize_string
rtp_hash_add
rtp_hash__add
rtp_hash.add
rtp_hash_lookup
rtp_lease_close
rtp_lease_start
rtp_nat_en_oper
rtp_nat_en_parse
rtp_offers
rtproto_str
rtp_save_tuple
rtree.c
rtree.h
rtree_s
rtree_t
rt_refl_clnt_oper
rt_scope_t
rtype_oper
(gdb) p rt
Display all 159 possibilities? (y or n)
rt0_hdr
rt28xx_ioctl.h
rt28xxreq_scan_result
rta_addattr32
rta_addattr_l
rtable
rtable_ent_same_value
rtable_key
rta_cacheinfo
rtattr
rtattr_parse
rtattr_type_t
rtcache
rtcache_ctx
rtcache_list_act
rtcache_list_oper
rtc.h
rt_class_t
rtcp_tuple_lookup
rtc_time
rte
rtentry
rtf_crc32
rtf_crc32_init
rtf_crc32_table
rtf_decomp
rtf_decomp_sz
rtf_init_dict
rtgenmsg
rth
rtld.c
rtld_errno
rtld_global
rtld_global_ro
rtld_lock_default_lock_recursive
rtld_lock_default_unlock_recursive
rtld_search_dirs
rtld-strnlen.c
rtlib6.c
rtlib.c
rtmon_dump_val
rtmp
rtmp_amf_error_set
rtmp_amf_result_set
rtmp_bandwidth_type_limit_dynamic
rtmp_bandwidth_type_limit_hard
rtmp_bandwidth_type_limit_soft
rtmp_conf
rtmp_conf_
rtmp_ctrlmsg_evt_buffer_empty
rtmp_ctrlmsg_evt_buffer_ready
rtmp_ctrlmsg_evt_ping_request
rtmp_ctrlmsg_evt_ping_response
rtmp_ctrlmsg_evt_request_verify
rtmp_ctrlmsg_evt_respond_verify
rtmp_ctrlmsg_evt_set_buffer_length
rtmp_ctrlmsg_evt_stream_begin
rtmp_ctrlmsg_evt_stream_dry
rtmp_ctrlmsg_evt_stream_eof
rtmp_ctrlmsg_evt_stream_is_recorded
rtmp_fmt0_hdr_full
rtmp_fmt1_hdr_same_stream
rtmp_fmt2_hdr_same_stream_type_length
rtmp_fmt3_hdr_continue
rtmp_live_close_notifier
rtmp_live_data_notifier
rtmp_live_object_hash_map
rtmp_msgstage_chunk_data
rtmp_msgstage_csid
rtmp_msgstage_fmt
rtmp_msgstage_hdr
rtmp_msgstage_msg_hdr
rtmp_msgtype_abort_message
rtmp_msgtype_acknowledgement
rtmp_msgtype_aggregate
rtmp_msgtype_audio_type
rtmp_msgtype_command_amf0
rtmp_msgtype_command_amf3
rtmp_msgtype_invalid
rtmp_msgtype_max
rtmp_msgtype_metadata_amf0
rtmp_msgtype_metadata_amf3
rtmp_msgtype_set_chunk_size
rtmp_msgtype_set_peer_bandwidth
rtmp_msgtype_shared_object_amf0
rtmp_msgtype_shared_object_amf3
rtmp_msgtype_user_control_message
rtmp_msgtype_video_type
rtmp_msgtype_window_acknowledgement_size
rtmp_prof
rtmp_profile
rtmp_profile.c
rtmp_profile_generation
rtmp_stage_close
rtmp_stage_connect
rtmp_stage_create_stream
rtmp_stage_handshake
rtmp_stage_handshake_done
rtmp_stage_pause
rtmp_stage_pause_req
rtmp_stage_play
rtmp_stage_play_complete
rtmp_stage_play_stop
rtmp_stage_seek
rtmp_stage_shutdown
rtmp_stage_unpause
rtmp_stage_unpause_req
rtmp_status
rtmp_str_casecmp
rtmp_str_cmp
rtmp_str_t
rtmpt_dirty
rtmpt_enabled
rtmpt_info
rtmpt_intercept_clt_ops
rtmpt_intercept_srv_ops
rtmpt_monitor_srv_ops
rtmpt_req_elts
rtmpt_request
rtmpt_request_firstbyte
rtmpt_resp
rtmpt_response
rtmpt_response_firstbyte
rtmpt_ses
rtmpt_ses_tl
rtmpt_support_firstbyte
rtmpt_type
rtmsg
rtnetlink.h
rtnexthop
rtnl_dump_filter
rtnl_dump_request
rtnl_dump_set_timeout
rtnl_filter_timeout
rtnl_handle
rtnl_listen
rtnl_open
rtnl_send
rtnl_talk
rtnl_wilddump_request
rtp_deserialize_string
rtp_hash_add
rtp_hash__add
rtp_hash.add
rtp_hash_lookup
rtp_lease_close
rtp_lease_start
rtp_nat_en_oper
rtp_nat_en_parse
rtp_offers
rtproto_str
rtp_save_tuple
rtree.c
rtree.h
rtree_s
rtree_t
rt_refl_clnt_oper
rt_scope_t
rtype_oper
(gdb) p rt
Display all 159 possibilities? (y or n)
rt0_hdr
rt28xx_ioctl.h
rt28xxreq_scan_result
rta_addattr32
rta_addattr_l
rtable
rtable_ent_same_value
rtable_key
rta_cacheinfo
rtattr
rtattr_parse
rtattr_type_t
rtcache
rtcache_ctx
rtcache_list_act
rtcache_list_oper
rtc.h
rt_class_t
rtcp_tuple_lookup
rtc_time
rte
rtentry
rtf_crc32
rtf_crc32_init
rtf_crc32_table
rtf_decomp
rtf_decomp_sz
rtf_init_dict
rtgenmsg
rth
rtld.c
rtld_errno
rtld_global
rtld_global_ro
rtld_lock_default_lock_recursive
rtld_lock_default_unlock_recursive
rtld_search_dirs
rtld-strnlen.c
rtlib6.c
rtlib.c
rtmon_dump_val
rtmp
rtmp_amf_error_set
rtmp_amf_result_set
rtmp_bandwidth_type_limit_dynamic
rtmp_bandwidth_type_limit_hard
rtmp_bandwidth_type_limit_soft
rtmp_conf
rtmp_conf_
rtmp_ctrlmsg_evt_buffer_empty
rtmp_ctrlmsg_evt_buffer_ready
rtmp_ctrlmsg_evt_ping_request
rtmp_ctrlmsg_evt_ping_response
rtmp_ctrlmsg_evt_request_verify
rtmp_ctrlmsg_evt_respond_verify
rtmp_ctrlmsg_evt_set_buffer_length
rtmp_ctrlmsg_evt_stream_begin
rtmp_ctrlmsg_evt_stream_dry
rtmp_ctrlmsg_evt_stream_eof
rtmp_ctrlmsg_evt_stream_is_recorded
rtmp_fmt0_hdr_full
rtmp_fmt1_hdr_same_stream
rtmp_fmt2_hdr_same_stream_type_length
rtmp_fmt3_hdr_continue
rtmp_live_close_notifier
rtmp_live_data_notifier
rtmp_live_object_hash_map
rtmp_msgstage_chunk_data
rtmp_msgstage_csid
rtmp_msgstage_fmt
rtmp_msgstage_hdr
rtmp_msgstage_msg_hdr
rtmp_msgtype_abort_message
rtmp_msgtype_acknowledgement
rtmp_msgtype_aggregate
rtmp_msgtype_audio_type
rtmp_msgtype_command_amf0
rtmp_msgtype_command_amf3
rtmp_msgtype_invalid
rtmp_msgtype_max
rtmp_msgtype_metadata_amf0
rtmp_msgtype_metadata_amf3
rtmp_msgtype_set_chunk_size
rtmp_msgtype_set_peer_bandwidth
rtmp_msgtype_shared_object_amf0
rtmp_msgtype_shared_object_amf3
rtmp_msgtype_user_control_message
rtmp_msgtype_video_type
rtmp_msgtype_window_acknowledgement_size
rtmp_prof
rtmp_profile
rtmp_profile.c
rtmp_profile_generation
rtmp_stage_close
rtmp_stage_connect
rtmp_stage_create_stream
rtmp_stage_handshake
rtmp_stage_handshake_done
rtmp_stage_pause
rtmp_stage_pause_req
rtmp_stage_play
rtmp_stage_play_complete
rtmp_stage_play_stop
rtmp_stage_seek
rtmp_stage_shutdown
rtmp_stage_unpause
rtmp_stage_unpause_req
rtmp_status
rtmp_str_casecmp
rtmp_str_cmp
rtmp_str_t
rtmpt_dirty
rtmpt_enabled
rtmpt_info
rtmpt_intercept_clt_ops
rtmpt_intercept_srv_ops
rtmpt_monitor_srv_ops
rtmpt_req_elts
rtmpt_request
rtmpt_request_firstbyte
rtmpt_resp
rtmpt_response
rtmpt_response_firstbyte
rtmpt_ses
rtmpt_ses_tl
rtmpt_support_firstbyte
rtmpt_type
rtmsg
rtnetlink.h
rtnexthop
rtnl_dump_filter
rtnl_dump_request
rtnl_dump_set_timeout
rtnl_filter_timeout
rtnl_handle
rtnl_listen
rtnl_open
rtnl_send
rtnl_talk
rtnl_wilddump_request
rtp_deserialize_string
rtp_hash_add
rtp_hash__add
rtp_hash.add
rtp_hash_lookup
rtp_lease_close
rtp_lease_start
rtp_nat_en_oper
rtp_nat_en_parse
rtp_offers
rtproto_str
rtp_save_tuple
rtree.c
rtree.h
rtree_s
rtree_t
rt_refl_clnt_oper
rt_scope_t
rtype_oper
(gdb) p rtmp
rtmp
rtmp_amf_error_set
rtmp_amf_result_set
rtmp_bandwidth_type_limit_dynamic
rtmp_bandwidth_type_limit_hard
rtmp_bandwidth_type_limit_soft
rtmp_conf
rtmp_conf_
rtmp_ctrlmsg_evt_buffer_empty
rtmp_ctrlmsg_evt_buffer_ready
rtmp_ctrlmsg_evt_ping_request
rtmp_ctrlmsg_evt_ping_response
rtmp_ctrlmsg_evt_request_verify
rtmp_ctrlmsg_evt_respond_verify
rtmp_ctrlmsg_evt_set_buffer_length
rtmp_ctrlmsg_evt_stream_begin
rtmp_ctrlmsg_evt_stream_dry
rtmp_ctrlmsg_evt_stream_eof
rtmp_ctrlmsg_evt_stream_is_recorded
rtmp_fmt0_hdr_full
rtmp_fmt1_hdr_same_stream
rtmp_fmt2_hdr_same_stream_type_length
rtmp_fmt3_hdr_continue
rtmp_live_close_notifier
rtmp_live_data_notifier
rtmp_live_object_hash_map
rtmp_msgstage_chunk_data
rtmp_msgstage_csid
rtmp_msgstage_fmt
rtmp_msgstage_hdr
rtmp_msgstage_msg_hdr
rtmp_msgtype_abort_message
rtmp_msgtype_acknowledgement
rtmp_msgtype_aggregate
rtmp_msgtype_audio_type
rtmp_msgtype_command_amf0
rtmp_msgtype_command_amf3
rtmp_msgtype_invalid
rtmp_msgtype_max
rtmp_msgtype_metadata_amf0
rtmp_msgtype_metadata_amf3
rtmp_msgtype_set_chunk_size
rtmp_msgtype_set_peer_bandwidth
rtmp_msgtype_shared_object_amf0
rtmp_msgtype_shared_object_amf3
rtmp_msgtype_user_control_message
rtmp_msgtype_video_type
rtmp_msgtype_window_acknowledgement_size
rtmp_prof
rtmp_profile
rtmp_profile.c
rtmp_profile_generation
rtmp_stage_close
rtmp_stage_connect
rtmp_stage_create_stream
rtmp_stage_handshake
rtmp_stage_handshake_done
rtmp_stage_pause
rtmp_stage_pause_req
rtmp_stage_play
rtmp_stage_play_complete
rtmp_stage_play_stop
rtmp_stage_seek
rtmp_stage_shutdown
rtmp_stage_unpause
rtmp_stage_unpause_req
rtmp_status
rtmp_str_casecmp
rtmp_str_cmp
rtmp_str_t
rtmpt_dirty
rtmpt_enabled
rtmpt_info
rtmpt_intercept_clt_ops
rtmpt_intercept_srv_ops
rtmpt_monitor_srv_ops
rtmpt_req_elts
rtmpt_request
rtmpt_request_firstbyte
rtmpt_resp
rtmpt_response
rtmpt_response_firstbyte
rtmpt_ses
rtmpt_ses_tl
rtmpt_support_firstbyte
rtmpt_type
(gdb) p rtmp
rtmp
rtmp_amf_error_set
rtmp_amf_result_set
rtmp_bandwidth_type_limit_dynamic
rtmp_bandwidth_type_limit_hard
rtmp_bandwidth_type_limit_soft
rtmp_conf
rtmp_conf_
rtmp_ctrlmsg_evt_buffer_empty
rtmp_ctrlmsg_evt_buffer_ready
rtmp_ctrlmsg_evt_ping_request
rtmp_ctrlmsg_evt_ping_response
rtmp_ctrlmsg_evt_request_verify
rtmp_ctrlmsg_evt_respond_verify
rtmp_ctrlmsg_evt_set_buffer_length
rtmp_ctrlmsg_evt_stream_begin
rtmp_ctrlmsg_evt_stream_dry
rtmp_ctrlmsg_evt_stream_eof
rtmp_ctrlmsg_evt_stream_is_recorded
rtmp_fmt0_hdr_full
rtmp_fmt1_hdr_same_stream
rtmp_fmt2_hdr_same_stream_type_length
rtmp_fmt3_hdr_continue
rtmp_live_close_notifier
rtmp_live_data_notifier
rtmp_live_object_hash_map
rtmp_msgstage_chunk_data
rtmp_msgstage_csid
rtmp_msgstage_fmt
rtmp_msgstage_hdr
rtmp_msgstage_msg_hdr
rtmp_msgtype_abort_message
rtmp_msgtype_acknowledgement
rtmp_msgtype_aggregate
rtmp_msgtype_audio_type
rtmp_msgtype_command_amf0
rtmp_msgtype_command_amf3
rtmp_msgtype_invalid
rtmp_msgtype_max
rtmp_msgtype_metadata_amf0
rtmp_msgtype_metadata_amf3
rtmp_msgtype_set_chunk_size
rtmp_msgtype_set_peer_bandwidth
rtmp_msgtype_shared_object_amf0
rtmp_msgtype_shared_object_amf3
rtmp_msgtype_user_control_message
rtmp_msgtype_video_type
rtmp_msgtype_window_acknowledgement_size
rtmp_prof
rtmp_profile
rtmp_profile.c
rtmp_profile_generation
rtmp_stage_close
rtmp_stage_connect
rtmp_stage_create_stream
rtmp_stage_handshake
rtmp_stage_handshake_done
rtmp_stage_pause
rtmp_stage_pause_req
rtmp_stage_play
rtmp_stage_play_complete
rtmp_stage_play_stop
rtmp_stage_seek
rtmp_stage_shutdown
rtmp_stage_unpause
rtmp_stage_unpause_req
rtmp_status
rtmp_str_casecmp
rtmp_str_cmp
rtmp_str_t
rtmpt_dirty
rtmpt_enabled
rtmpt_info
rtmpt_intercept_clt_ops
rtmpt_intercept_srv_ops
rtmpt_monitor_srv_ops
rtmpt_req_elts
rtmpt_request
rtmpt_request_firstbyte
rtmpt_resp
rtmpt_response
rtmpt_response_firstbyte
rtmpt_ses
rtmpt_ses_tl
rtmpt_support_firstbyte
rtmpt_type
(gdb) p rtmp
rtmp
rtmp_amf_error_set
rtmp_amf_result_set
rtmp_bandwidth_type_limit_dynamic
rtmp_bandwidth_type_limit_hard
rtmp_bandwidth_type_limit_soft
rtmp_conf
rtmp_conf_
rtmp_ctrlmsg_evt_buffer_empty
rtmp_ctrlmsg_evt_buffer_ready
rtmp_ctrlmsg_evt_ping_request
rtmp_ctrlmsg_evt_ping_response
rtmp_ctrlmsg_evt_request_verify
rtmp_ctrlmsg_evt_respond_verify
rtmp_ctrlmsg_evt_set_buffer_length
rtmp_ctrlmsg_evt_stream_begin
rtmp_ctrlmsg_evt_stream_dry
rtmp_ctrlmsg_evt_stream_eof
rtmp_ctrlmsg_evt_stream_is_recorded
rtmp_fmt0_hdr_full
rtmp_fmt1_hdr_same_stream
rtmp_fmt2_hdr_same_stream_type_length
rtmp_fmt3_hdr_continue
rtmp_live_close_notifier
rtmp_live_data_notifier
rtmp_live_object_hash_map
rtmp_msgstage_chunk_data
rtmp_msgstage_csid
rtmp_msgstage_fmt
rtmp_msgstage_hdr
rtmp_msgstage_msg_hdr
rtmp_msgtype_abort_message
rtmp_msgtype_acknowledgement
rtmp_msgtype_aggregate
rtmp_msgtype_audio_type
rtmp_msgtype_command_amf0
rtmp_msgtype_command_amf3
rtmp_msgtype_invalid
rtmp_msgtype_max
rtmp_msgtype_metadata_amf0
rtmp_msgtype_metadata_amf3
rtmp_msgtype_set_chunk_size
rtmp_msgtype_set_peer_bandwidth
rtmp_msgtype_shared_object_amf0
rtmp_msgtype_shared_object_amf3
rtmp_msgtype_user_control_message
rtmp_msgtype_video_type
rtmp_msgtype_window_acknowledgement_size
rtmp_prof
rtmp_profile
rtmp_profile.c
rtmp_profile_generation
rtmp_stage_close
rtmp_stage_connect
rtmp_stage_create_stream
rtmp_stage_handshake
rtmp_stage_handshake_done
rtmp_stage_pause
rtmp_stage_pause_req
rtmp_stage_play
rtmp_stage_play_complete
rtmp_stage_play_stop
rtmp_stage_seek
rtmp_stage_shutdown
rtmp_stage_unpause
rtmp_stage_unpause_req
rtmp_status
rtmp_str_casecmp
rtmp_str_cmp
rtmp_str_t
rtmpt_dirty
rtmpt_enabled
rtmpt_info
rtmpt_intercept_clt_ops
rtmpt_intercept_srv_ops
rtmpt_monitor_srv_ops
rtmpt_req_elts
rtmpt_request
rtmpt_request_firstbyte
rtmpt_resp
rtmpt_response
rtmpt_response_firstbyte
rtmpt_ses
rtmpt_ses_tl
rtmpt_support_firstbyte
rtmpt_type
(gdb) p rtmp_ses
No symbol "rtmp_ses" in current context.
(gdb) where
#0  wad_rtmpt_srv_intercept_proc_region (hstrm=0x40d2df1c,
    br=0x40e1a574) at wad_http_cache.c:10633
#1  0x092ef1e3 in wad_http_stream_read_normal_body (
    hstrm=0x40d2df1c) at wad_http_parser.c:3595
#2  0x092f12b8 in wad_http_stream_read_body (hstrm=0x40d2df1c)
    at wad_http_parser.c:4368
#3  0x0929f985 in wad_http_server_read_sync (port=0x40d93bf0)
    at wad_http_cache.c:13476
#4  0x0920340a in wad_port_tp_glue_in_read_sync (port=0x40d93bf0)
    at wad_app_eng.c:362
#5  0x09377555 in wad_tcp_port_on_read (tcp_port=0x40d93bf0,
    last_read=0) at wad_tcp_port.c:1443
#6  0x09377824 in wad_tcp_port_on_event (e=0x40de7274,
    ev=WAD_SCHED_EVENT_READABLE) at wad_tcp_port.c:1513
---Type <return> to continue, or q <return> to quit---
#7  0x0934ec4c in wad_sched_process_events (n=1)
    at scheduler/epoll/wad_sched.c:58
#8  0x0934ee66 in wad_sched_start ()
    at scheduler/epoll/wad_sched.c:135
#9  0x0938bdb2 in wad_ui_main (argc=3, argv=0xbfffff54)
    at ui/fg/wad_ui.c:521
#10 0x08066354 in fortiexec_call_main (argc=3, argv=0xbfffff54)
    at fortiexec.c:666
#11 0x08065c52 in main (argc=3, argv=0xbfffff54) at init.c:2428
(gdb) p rtmpt_ses
$33 = (struct wad_rtmpt_session *) 0x40e4f02c
(gdb) p port
$34 = (struct wad_port *) 0x40e4f0c8
(gdb) p port->in_ops
$35 = (struct wad_port_ops *) 0xa9def20 <wad_rtmp_ops>
(gdb) p port->in_ops->read_
read_block        read_cache_stop   read_sync
read_cache_start  read_region
(gdb) p port->in_ops->read_
read_block        read_cache_stop   read_sync
read_cache_start  read_region
(gdb) p port->in_ops->read_region
$36 = (int (*)(struct wad_port *,
    struct wad_buff_region *)) 0x933b82c <wad_rtmp_app_port_read_region>
(
