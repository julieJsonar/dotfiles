#!/bin/bash

#echo "Generating tags and cscope database..."
SECONDS=0

# Rebuild one file: used by auto update tag come from vim
#   - file should be full-path
if [ ! -z "$1" ]; then
	if [ -f ./.tags ] && [ -f $1 ]; then
		# only rebuild tags when the file belong curr dir
		#if [[ "$1" == "$PWD/"* ]]; then
			file=$1
			pwdlen=${#PWD}
			LC_COLLATE=C ctags --extra=+f -f .tags -a "./${file:$pwdlen}"
			#duration=$SECONDS
			#notify-send "Done tags R $(($duration / 60)):$(($duration % 60))."
		#fi
		exit 0
	fi
fi

# Rebuild All
if [ -f ./cscope.files ]; then
	filecnt_c=1024
else
	filecnt_c=$(find . -maxdepth 3 -type f -name '*.c' | wc -l)
fi

if [ $filecnt_c -ge 1024 ]; then
	if [ ! -z "$1" ]; then
		tagscope=$1
	else
		tagscope="default"
	fi

	case "$tagscope" in
	   "all")
		   echo "tag all"
		   find -L . -name '*.c' -o -name '*.cc' -o -name '*.h' -o -name '*.cpp' -o -name '*.hpp' > /tmp/cscope.f1
	   ;;
	   "wad")
		   echo "tag wad"
		   find daemon/wad -name '*.c' -o -name '*.cc' -o -name '*.h' -o -name '*.cpp' -o -name '*.hpp' > /tmp/cscope.f1
	   ;;
	   *)
		   echo "tag default"
		   find . -name '*.c' -o -name '*.cc' -o -name '*.h' -o -name '*.cpp' -o -name '*.hpp' > /tmp/cscope.f1
	   ;;
	esac

	wad_c=$(grep 'daemon/wad' /tmp/cscope.f1 | wc -l)
	if [ $wad_c -ge 10 ]; then
		cat /tmp/cscope.f1                 | \
			grep -v 'wad/ui/stdin/'        | \
			grep -v 'wad/redirect/socket/' | \
			grep -v 'linux/'               | \
			grep -v 'linux-.*/'            | \
			grep -v 'compress/'            | \
			grep -v 'cooked/'              | \
			grep -v 'fortitest/'           | \
			grep -v 'linuxatm/'            | \
			grep -v 'sysctl/'              | \
			grep -v 'router/'              | \
			grep -v 'fortiweb/'            | \
			grep -v 'fortitest/'           | \
			grep -v 'tests/gtest/'         | \
			grep -v 'tools/'               | \
			grep -v '/_' \
			> /tmp/cscope.f2
	else
		mv /tmp/cscope.f1 /tmp/cscope.f2
	fi

	sort /tmp/cscope.f2 > /tmp/cscope.f3
	mv /tmp/cscope.f3 cscope.files
	#    /usr/bin/time gtags -f cscope.files
	#    /usr/bin/time global -u -L cscope.files
    rm -f .tags 2> /dev/null
    rm -f .tagx 2> /dev/null

# tage-emacs, tags-vim, tagx-fuzzy
	#LC_COLLATE=C ctags -e --extra=+f -L cscope.files -f .tage > /dev/null 2>&1
	LC_COLLATE=C ctags --extra=+f -L cscope.files -f .tags > /dev/null 2>&1
	LC_COLLATE=C ctags -xL cscope.files > .tagx 2>/dev/null
	cscope -kbq -i cscope.files > /dev/null 2>&1

	duration=$SECONDS
	notify-send "Done tags files $(($duration / 60)):$(($duration % 60))."
else
    rm -f .tags 2> /dev/null
    rm -f .tagx 2> /dev/null

# tage-emacs, tags-vim, tagx-fuzzy
	#LC_COLLATE=C ctags -e --extra=+f -f .tage -R . > /dev/null 2>&1
	LC_COLLATE=C ctags --extra=+f -f .tags -R . > /dev/null 2>&1
	LC_COLLATE=C ctags -xR . > .tagx 2>/dev/null
	cscope -bcqR > /dev/null 2>&1

	duration=$SECONDS
	notify-send "Done tags R $(($duration / 60)):$(($duration % 60))."
fi
#ctags -e --c-kinds=+defgstum -L cscope.files > /dev/null 2>&1

