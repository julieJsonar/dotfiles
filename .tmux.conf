####################################################
# Help:
#
# tmux ls   <<< list session
# tmux show -g   <<< show current config
# tmux list-keys <<< show current keys
# tmux kill-server -t <tab>
# tmux killp -t <tab>
# tmux rename-session -t 0 work
# tmux attach -t work
#
# :source ~/.tmux.conf
# :select-layout tiled|even-*|main-*  <<< * is horizontal|vertical
# :setw synchronize-panes on|off
# :rename-windows <new-name>
#
# Shortkeys:
#   <leader>r              <<< reload tmux.conf
#   <leader>,              <<< rename-windows
#   <leader>x              <<< kill current pane
#   <leader>Alt+1,2,3,4    <<< select-layout
#           x              <<< clear all
#           Alt+m          <<< toggle pane maximize
#           Alt+1~9        <<< select tmux windows
#           Ctl+Arrow      <<< Left,Right: vim tabs
#           Ctl+Arrow      <<< Up, Down: tmux windows
#
# all-panes "<command>"   <<< supported by tmux-all-panes.sh
#
# Make it use C-a, similar to gnu-screen
####################################################
set -g default-terminal "screen-256color"
#set -g default-terminal "screen-256color-bce"

set -gw xterm-keys on # stop shell bindkey when using tmux
setw -g xterm-keys on # stop shell bindkey when using tmux
#unbind-key -a        # will unbind the all default key bind, but also remove our control key

unbind C-b
unbind l
set -g prefix C-a
bind a  send-prefix
bind C-a last-window
unbind r
bind r source-file ~/.tmux.conf \; display "Reload!"

# 0 is too far from ` ;)
set -g renumber-windows on
set -g base-index 1
setw -g pane-base-index 1

#Allows for faster key repetition
set -g escape-time 10
set -g wrap-search off
#set -g default-shell /bin/zsh
set -g history-limit 8000
set -g display-time 1000
#set -g pane-active-border-bg colour244
set -g visual-activity on
setw -g monitor-activity on
set -g word-separators " |-_@"
setw -g mode-keys vi

bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy y copy-pipe "xclip -sel clip -i"
bind-key ] run "tmux set-buffer \"$(xclip -sel clip -o)\"; tmux paste-buffer"

# loud or quiet?
set -g focus-events off
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g bell-action none
setw -g monitor-activity off
set-option -gw xterm-keys on

# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -ga terminal-overrides ',*:enacs@:smacs@:rmacs@:acsc@'
####################################################
# Version-specific commands [grumble, grumble]
# See: https://github.com/tmux/tmux/blob/master/CHANGES
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# Mouse
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
  "set -g mouse-select-pane on; set -g mode-mouse on; \
    set -g mouse-resize-pane on; set -g mouse-select-window on"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"
####################################################

####################################################
# set status bar
set -g status on
set -g status-bg colour235 #base02
set -g status-fg colour136 #yellow
set -g status-attr default
set -g status-position top
set -g status-attr dim
#set -g status-keys vi
#set -g status-interval 1
set -g status-justify centre # center align window list
#set -g status-left-length 20
set -g status-right-length 40

#set -g status-left '#[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
#set -g status-left ' #S '
set -g status-left ' #S #P'
set -g status-right '#[fg=white,bg=default]%a %l:%M %p %Y-%m-%d'
####################################################

####################################################
#  Theme & Colors

#set -g pane-border-fg green
#set -g pane-border-bg black
#set -g pane-active-border-fg white
#set -g pane-active-border-bg yellow

# default window title colors
setw -g window-status-fg colour244 #base0
setw -g window-status-bg default
setw -g window-status-attr dim

# active window title colors
setw -g window-status-current-fg colour166 #orange
setw -g window-status-current-bg default
setw -g window-status-current-attr bright

# message text
set -g message-bg colour235 #base02
set -g message-fg colour166 #orange
####################################################

####################################################
# set terminal title
set -g set-titles off
set -g allow-rename off
setw -g automatic-rename off

## Set window title string
##  #H  Hostname of local host
##  #I  Current window index
##  #P  Current pane index
##  #S  Session name
##  #T  Current window title
##  #W  Current window name
##  #   A literal ‘#’
#setw -g automatic-rename
#set -g set-titles-string '#S:#I.#P #W'
####################################################


####################################################
# Smart pane switching with awareness of vim splits
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

#maximizing and restoring panes.
bind -n M-m resize-pane -Z \;

# Should diable gnu-terminal's shortkey Alt+num
#bind -n M-o     send-keys C-o
#bind -n M-i     send-keys C-i
#bind -n M-n     send-keys C-n
#bind -n M-p     send-keys C-p
#bind -n M-[     send-keys C-[
#bind -n M-]     send-keys C-]

bind -n M-h     select-pane -L
bind -n M-j     select-pane -D
bind -n M-k     select-pane -U
bind -n M-l     select-pane -R

#bind -n C-h    select-pane -L
#bind -n C-j    select-pane -D
#bind -n C-k    select-pane -U
#bind -n C-l    select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left  send-keys C-w \; send-keys -l >
bind -n M-Right send-keys C-w \; send-keys -l <
bind -n M-Up    send-keys C-w \; send-keys -l +
bind -n M-Down  send-keys C-w \; send-keys -l -

#bind -n C-Left  send-keys Escape \; send-keys -l gT
#bind -n C-Right send-keys Escape \; send-keys -l gt
#bind -n C-Up    previous-window
#bind -n C-Down  next-window

# Shift arrow to switch windows
#bind -n S-Left  previous-window
#bind -n S-Right next-window
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

bind -n M-1     select-window -t 1
bind -n M-2     select-window -t 2
bind -n M-3     select-window -t 3
bind -n M-4     select-window -t 4
bind -n M-5     select-window -t 5
bind -n M-6     select-window -t 6
bind -n M-7     select-window -t 7
bind -n M-8     select-window -t 8
bind -n M-9     select-window -t 9
bind -n M-0     select-window -t 10

#bind -n M-7     send-keys Escape \; send-keys -l 1gt
#bind -n M-8     send-keys Escape \; send-keys -l 2gt
#bind -n M-9     send-keys Escape \; send-keys -l 3gt
#bind -n M-0     send-keys Escape \; send-keys -l 4gt

#clear both screen and history
bind -n C-x     send-keys C-l \; run 'tmux clear-history' \;
#bind -n C-x run-shell "tmux show-messages | tail -1 | grep -q on; if [[ \$? == 0 ]]; then export toggle=off; echo true; else export toggle=on; echo false; fi; tmux display-message \$toggle &> /dev/null;;"
bind-key y capture-pane -S -200 \; save-buffer '/tmp/vim.yank' \; delete-buffer \; display 'Save last 200 to /tmp/vim.yank' \;
#bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

bind-key H pipe-pane 'cat > $HOME/tmuxlog/tmux-#W.log' \; display-message 'Started logging to $HOME/tmuxlog/tmux-#W.log'
bind-key h pipe-pane \; display-message 'Ended logging to $HOME/tmuxlog/tmux-#W.log'

bind-key C-d pipe-pane -o '~/.tmux-pipe-rdb' \; display-message 'Pipe to $HOME/.tmux-pipe-rdb'

unbind p

